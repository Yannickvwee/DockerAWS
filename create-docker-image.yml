

CreateDockerInstance:
    Type: AWS::EC2::Instance
    Properties:
        Monitoring: true
        KeyName: !Ref SSHkey
        ImageId:  ami-0bcc094591f354be2
        InstanceType: t2.micro
        Tags:
          - Key: Name
            Value: MongoDB
        SecurityGroupIds:
        - !Ref DatabaseSG
        SubnetId:
            Fn::ImportValue:
                Fn::Sub:
                - ${VPCStack}:FirstSubnet
                - VPCStack: !Ref VPCStack
        UserData:
            Fn::Base64: !Sub |
                  - #!bin/bash
                    apt-get -y update
                    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
                    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
                    apt-get -y update
                    apt-get -y install docker-ce docker-ce-cli containerd.io docker-compose git

                    mkdir /tmp/efs-utils
                    cd /tmp/efs-utils
                    git clone https://github.com/aws/efs-utils
                    cd efs-utils
                    sudo apt-get -y install binutils
                    ./build-deb.sh
                    sudo apt-get -y install ./build/amazon-efs-utils*deb
                    mkdir /EFS
                    sudo mount -t efs ${EFS}:/ /EFS
                     
                    mkdir docker
                    cd docker
                    docker swarm init
                    docker swarm join-token manager -q > /EFS/swarmtoken
                    https://github.com/broadinstitute/covid19-testing.git master

                    touch ./Dockerfile
                    cat << EOF > ./Dockerfile
                    FROM nginx:latest
                    COPY ./master /usr/share/nginx/html/COVIDdashboard
                    RUN service nginx start
                    EXPOSE 80
                    EOF
                    mkdir ./netapp/master
                    git clone https://github.com/looking4ward/nhs-cac-docker-dotnetwebapp.git ./netapp/master
                    cat << EOF > ./docker-compose.yml
                    version: "3.3"
                    services:
                      nginx:
                        build:
                          context: .
                        ports:
                          - "80:80"
                      netapp:
                        build:
                          context: ./netapp/master
                        ports:
                          - "5000:80"
                    EOF
                    docker-compose build




